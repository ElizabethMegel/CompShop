// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: component.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_component_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_component_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3013000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3013000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "component_type.pb.h"
#include "characteristics.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_component_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_component_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_component_2eproto;
class ComponentProto;
class ComponentProtoDefaultTypeInternal;
extern ComponentProtoDefaultTypeInternal _ComponentProto_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::ComponentProto* Arena::CreateMaybeMessage<::ComponentProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class ComponentProto PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ComponentProto) */ {
 public:
  inline ComponentProto() : ComponentProto(nullptr) {}
  virtual ~ComponentProto();

  ComponentProto(const ComponentProto& from);
  ComponentProto(ComponentProto&& from) noexcept
    : ComponentProto() {
    *this = ::std::move(from);
  }

  inline ComponentProto& operator=(const ComponentProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComponentProto& operator=(ComponentProto&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ComponentProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ComponentProto* internal_default_instance() {
    return reinterpret_cast<const ComponentProto*>(
               &_ComponentProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ComponentProto& a, ComponentProto& b) {
    a.Swap(&b);
  }
  inline void Swap(ComponentProto* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ComponentProto* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ComponentProto* New() const final {
    return CreateMaybeMessage<ComponentProto>(nullptr);
  }

  ComponentProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ComponentProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ComponentProto& from);
  void MergeFrom(const ComponentProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComponentProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ComponentProto";
  }
  protected:
  explicit ComponentProto(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_component_2eproto);
    return ::descriptor_table_component_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArticleFieldNumber = 1,
    kCharacteristicsFieldNumber = 4,
    kPriceFieldNumber = 2,
    kTypeFieldNumber = 3,
  };
  // string article = 1;
  void clear_article();
  const std::string& article() const;
  void set_article(const std::string& value);
  void set_article(std::string&& value);
  void set_article(const char* value);
  void set_article(const char* value, size_t size);
  std::string* mutable_article();
  std::string* release_article();
  void set_allocated_article(std::string* article);
  private:
  const std::string& _internal_article() const;
  void _internal_set_article(const std::string& value);
  std::string* _internal_mutable_article();
  public:

  // .CharacteristicsProto characteristics = 4;
  bool has_characteristics() const;
  private:
  bool _internal_has_characteristics() const;
  public:
  void clear_characteristics();
  const ::CharacteristicsProto& characteristics() const;
  ::CharacteristicsProto* release_characteristics();
  ::CharacteristicsProto* mutable_characteristics();
  void set_allocated_characteristics(::CharacteristicsProto* characteristics);
  private:
  const ::CharacteristicsProto& _internal_characteristics() const;
  ::CharacteristicsProto* _internal_mutable_characteristics();
  public:
  void unsafe_arena_set_allocated_characteristics(
      ::CharacteristicsProto* characteristics);
  ::CharacteristicsProto* unsafe_arena_release_characteristics();

  // uint32 price = 2;
  void clear_price();
  ::PROTOBUF_NAMESPACE_ID::uint32 price() const;
  void set_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_price() const;
  void _internal_set_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // .ComponentTypeProto type = 3;
  void clear_type();
  ::ComponentTypeProto type() const;
  void set_type(::ComponentTypeProto value);
  private:
  ::ComponentTypeProto _internal_type() const;
  void _internal_set_type(::ComponentTypeProto value);
  public:

  // @@protoc_insertion_point(class_scope:ComponentProto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr article_;
  ::CharacteristicsProto* characteristics_;
  ::PROTOBUF_NAMESPACE_ID::uint32 price_;
  int type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_component_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ComponentProto

// string article = 1;
inline void ComponentProto::clear_article() {
  article_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ComponentProto::article() const {
  // @@protoc_insertion_point(field_get:ComponentProto.article)
  return _internal_article();
}
inline void ComponentProto::set_article(const std::string& value) {
  _internal_set_article(value);
  // @@protoc_insertion_point(field_set:ComponentProto.article)
}
inline std::string* ComponentProto::mutable_article() {
  // @@protoc_insertion_point(field_mutable:ComponentProto.article)
  return _internal_mutable_article();
}
inline const std::string& ComponentProto::_internal_article() const {
  return article_.Get();
}
inline void ComponentProto::_internal_set_article(const std::string& value) {
  
  article_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ComponentProto::set_article(std::string&& value) {
  
  article_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ComponentProto.article)
}
inline void ComponentProto::set_article(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  article_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:ComponentProto.article)
}
inline void ComponentProto::set_article(const char* value,
    size_t size) {
  
  article_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ComponentProto.article)
}
inline std::string* ComponentProto::_internal_mutable_article() {
  
  return article_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ComponentProto::release_article() {
  // @@protoc_insertion_point(field_release:ComponentProto.article)
  return article_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ComponentProto::set_allocated_article(std::string* article) {
  if (article != nullptr) {
    
  } else {
    
  }
  article_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), article,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ComponentProto.article)
}

// uint32 price = 2;
inline void ComponentProto::clear_price() {
  price_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ComponentProto::_internal_price() const {
  return price_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ComponentProto::price() const {
  // @@protoc_insertion_point(field_get:ComponentProto.price)
  return _internal_price();
}
inline void ComponentProto::_internal_set_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  price_ = value;
}
inline void ComponentProto::set_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_price(value);
  // @@protoc_insertion_point(field_set:ComponentProto.price)
}

// .ComponentTypeProto type = 3;
inline void ComponentProto::clear_type() {
  type_ = 0;
}
inline ::ComponentTypeProto ComponentProto::_internal_type() const {
  return static_cast< ::ComponentTypeProto >(type_);
}
inline ::ComponentTypeProto ComponentProto::type() const {
  // @@protoc_insertion_point(field_get:ComponentProto.type)
  return _internal_type();
}
inline void ComponentProto::_internal_set_type(::ComponentTypeProto value) {
  
  type_ = value;
}
inline void ComponentProto::set_type(::ComponentTypeProto value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:ComponentProto.type)
}

// .CharacteristicsProto characteristics = 4;
inline bool ComponentProto::_internal_has_characteristics() const {
  return this != internal_default_instance() && characteristics_ != nullptr;
}
inline bool ComponentProto::has_characteristics() const {
  return _internal_has_characteristics();
}
inline const ::CharacteristicsProto& ComponentProto::_internal_characteristics() const {
  const ::CharacteristicsProto* p = characteristics_;
  return p != nullptr ? *p : *reinterpret_cast<const ::CharacteristicsProto*>(
      &::_CharacteristicsProto_default_instance_);
}
inline const ::CharacteristicsProto& ComponentProto::characteristics() const {
  // @@protoc_insertion_point(field_get:ComponentProto.characteristics)
  return _internal_characteristics();
}
inline void ComponentProto::unsafe_arena_set_allocated_characteristics(
    ::CharacteristicsProto* characteristics) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(characteristics_);
  }
  characteristics_ = characteristics;
  if (characteristics) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ComponentProto.characteristics)
}
inline ::CharacteristicsProto* ComponentProto::release_characteristics() {
  
  ::CharacteristicsProto* temp = characteristics_;
  characteristics_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CharacteristicsProto* ComponentProto::unsafe_arena_release_characteristics() {
  // @@protoc_insertion_point(field_release:ComponentProto.characteristics)
  
  ::CharacteristicsProto* temp = characteristics_;
  characteristics_ = nullptr;
  return temp;
}
inline ::CharacteristicsProto* ComponentProto::_internal_mutable_characteristics() {
  
  if (characteristics_ == nullptr) {
    auto* p = CreateMaybeMessage<::CharacteristicsProto>(GetArena());
    characteristics_ = p;
  }
  return characteristics_;
}
inline ::CharacteristicsProto* ComponentProto::mutable_characteristics() {
  // @@protoc_insertion_point(field_mutable:ComponentProto.characteristics)
  return _internal_mutable_characteristics();
}
inline void ComponentProto::set_allocated_characteristics(::CharacteristicsProto* characteristics) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(characteristics_);
  }
  if (characteristics) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(characteristics)->GetArena();
    if (message_arena != submessage_arena) {
      characteristics = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, characteristics, submessage_arena);
    }
    
  } else {
    
  }
  characteristics_ = characteristics;
  // @@protoc_insertion_point(field_set_allocated:ComponentProto.characteristics)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_component_2eproto
