// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: storage.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_storage_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_storage_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3013000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3013000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "component.pb.h"
#include "worker.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_storage_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_storage_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_storage_2eproto;
class StorageProto;
class StorageProtoDefaultTypeInternal;
extern StorageProtoDefaultTypeInternal _StorageProto_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::StorageProto* Arena::CreateMaybeMessage<::StorageProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class StorageProto PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:StorageProto) */ {
 public:
  inline StorageProto() : StorageProto(nullptr) {}
  virtual ~StorageProto();

  StorageProto(const StorageProto& from);
  StorageProto(StorageProto&& from) noexcept
    : StorageProto() {
    *this = ::std::move(from);
  }

  inline StorageProto& operator=(const StorageProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline StorageProto& operator=(StorageProto&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StorageProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StorageProto* internal_default_instance() {
    return reinterpret_cast<const StorageProto*>(
               &_StorageProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(StorageProto& a, StorageProto& b) {
    a.Swap(&b);
  }
  inline void Swap(StorageProto* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StorageProto* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StorageProto* New() const final {
    return CreateMaybeMessage<StorageProto>(nullptr);
  }

  StorageProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StorageProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StorageProto& from);
  void MergeFrom(const StorageProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StorageProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "StorageProto";
  }
  protected:
  explicit StorageProto(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_storage_2eproto);
    return ::descriptor_table_storage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kComponentsFieldNumber = 1,
    kWorkersFieldNumber = 2,
  };
  // repeated .ComponentProto components = 1;
  int components_size() const;
  private:
  int _internal_components_size() const;
  public:
  void clear_components();
  ::ComponentProto* mutable_components(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ComponentProto >*
      mutable_components();
  private:
  const ::ComponentProto& _internal_components(int index) const;
  ::ComponentProto* _internal_add_components();
  public:
  const ::ComponentProto& components(int index) const;
  ::ComponentProto* add_components();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ComponentProto >&
      components() const;

  // repeated .WorkerProto workers = 2;
  int workers_size() const;
  private:
  int _internal_workers_size() const;
  public:
  void clear_workers();
  ::WorkerProto* mutable_workers(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::WorkerProto >*
      mutable_workers();
  private:
  const ::WorkerProto& _internal_workers(int index) const;
  ::WorkerProto* _internal_add_workers();
  public:
  const ::WorkerProto& workers(int index) const;
  ::WorkerProto* add_workers();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::WorkerProto >&
      workers() const;

  // @@protoc_insertion_point(class_scope:StorageProto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ComponentProto > components_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::WorkerProto > workers_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_storage_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// StorageProto

// repeated .ComponentProto components = 1;
inline int StorageProto::_internal_components_size() const {
  return components_.size();
}
inline int StorageProto::components_size() const {
  return _internal_components_size();
}
inline ::ComponentProto* StorageProto::mutable_components(int index) {
  // @@protoc_insertion_point(field_mutable:StorageProto.components)
  return components_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ComponentProto >*
StorageProto::mutable_components() {
  // @@protoc_insertion_point(field_mutable_list:StorageProto.components)
  return &components_;
}
inline const ::ComponentProto& StorageProto::_internal_components(int index) const {
  return components_.Get(index);
}
inline const ::ComponentProto& StorageProto::components(int index) const {
  // @@protoc_insertion_point(field_get:StorageProto.components)
  return _internal_components(index);
}
inline ::ComponentProto* StorageProto::_internal_add_components() {
  return components_.Add();
}
inline ::ComponentProto* StorageProto::add_components() {
  // @@protoc_insertion_point(field_add:StorageProto.components)
  return _internal_add_components();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ComponentProto >&
StorageProto::components() const {
  // @@protoc_insertion_point(field_list:StorageProto.components)
  return components_;
}

// repeated .WorkerProto workers = 2;
inline int StorageProto::_internal_workers_size() const {
  return workers_.size();
}
inline int StorageProto::workers_size() const {
  return _internal_workers_size();
}
inline ::WorkerProto* StorageProto::mutable_workers(int index) {
  // @@protoc_insertion_point(field_mutable:StorageProto.workers)
  return workers_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::WorkerProto >*
StorageProto::mutable_workers() {
  // @@protoc_insertion_point(field_mutable_list:StorageProto.workers)
  return &workers_;
}
inline const ::WorkerProto& StorageProto::_internal_workers(int index) const {
  return workers_.Get(index);
}
inline const ::WorkerProto& StorageProto::workers(int index) const {
  // @@protoc_insertion_point(field_get:StorageProto.workers)
  return _internal_workers(index);
}
inline ::WorkerProto* StorageProto::_internal_add_workers() {
  return workers_.Add();
}
inline ::WorkerProto* StorageProto::add_workers() {
  // @@protoc_insertion_point(field_add:StorageProto.workers)
  return _internal_add_workers();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::WorkerProto >&
StorageProto::workers() const {
  // @@protoc_insertion_point(field_list:StorageProto.workers)
  return workers_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_storage_2eproto
